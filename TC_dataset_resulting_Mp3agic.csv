ID;countInput;countLineCode;countLineCodeDecl;countLineCodeExe;countOutput;countPath;countPathLog;countStmt;countStmtDec;countStmtExe;cyclomatic;cyclomaticModified;cyclomaticStrict;essential;knots;maxEssentialKnots;maxNesting;minEssentialKnots;ID;countInput;countLineCode;countLineCodeDecl;countLineCodeExe;countOutput;countPath;countPathLog;countStmt;countStmtDec;countStmtExe;cyclomatic;cyclomaticModified;cyclomaticStrict;essential;knots;maxEssentialKnots;maxNesting;minEssentialKnots;Id;AvgPathLength;HasLoop;AvgCountLoop;CountReqEcCovered;EdgeCoverage;CountReqPcCovered;PrimePathCoverage
com.mpatric.mp3agic.BaseException.getDetailedMessage();3;20;3;15;8;5;1;15;3;12;4;4;5;3;3;2;2;1;com.mpatric.mp3agic.BaseExceptionTest.generatesCorrectDetailedMessageForChainedBaseExceptions();0;14;8;10;12;2;0;12;8;4;2;2;2;2;0;0;0;0;com.mpatric.mp3agic.BaseExceptionTest.generatesCorrectDetailedMessageForChainedBaseExceptions();70;1;4;16;0.941176470588235;13;0.541666666666667
com.mpatric.mp3agic.BufferTools.indexOfTerminator(byte[],int,int);21;16;3;9;1;8;1;16;4;12;6;6;6;6;5;5;4;5;com.mpatric.mp3agic.BufferToolsTest.findsFirstDoubleTerminatorAfterFromIndex();48;56;28;28;28;14;0;42;28;14;14;14;14;14;0;0;0;0;com.mpatric.mp3agic.BufferToolsTest.findsFirstDoubleTerminatorAfterFromIndex();342;1;57;16;1;13;0.565217391304348
com.mpatric.mp3agic.BufferTools.padStringRight(String,int,char);7;8;2;5;4;3;0;7;2;5;3;3;3;1;1;0;1;0;com.mpatric.mp3agic.BufferToolsTest.shouldPadRightWithNullCharacters();0;19;3;13;6;3;0;16;3;13;3;3;3;3;0;0;0;0;com.mpatric.mp3agic.BufferToolsTest.shouldPadRightWithNullCharacters();24.3333333333333;1;4;9;1;5;0.833333333333333
com.mpatric.mp3agic.BufferTools.setBit(byte,int,boolean);12;9;2;5;1;2;0;6;2;4;2;2;2;1;1;0;1;0;com.mpatric.mp3agic.BufferToolsTest.shouldSetBitsInBytesCorrectly();0;9;2;7;2;1;0;8;2;6;1;1;1;1;0;0;0;0;com.mpatric.mp3agic.BufferToolsTest.shouldSetBitsInBytesCorrectly();5;0;0;6;1;2;1
com.mpatric.mp3agic.BufferTools.sizeSynchronisationWouldSubtract(byte[]);5;10;2;6;1;6;1;10;3;7;4;4;9;1;0;0;2;0;com.mpatric.mp3agic.BufferToolsTest.shouldDetermineSynchronisationSizesCorrectly();2;9;1;7;2;1;0;8;1;7;1;1;1;1;0;0;0;0;com.mpatric.mp3agic.BufferToolsTest.shouldDetermineSynchronisationSizesCorrectly();11.6666666666667;1;2.33333333333333;9;1;8;0.888888888888889
com.mpatric.mp3agic.BufferTools.synchroniseBuffer(byte[]);8;15;4;11;2;4;1;15;5;10;4;4;7;1;1;0;2;0;com.mpatric.mp3agic.BufferToolsTest.shouldUnsynchroniseThenSynchroniseBufferMinimalBufferCorrectly();5;16;10;12;6;2;0;14;10;4;2;2;2;2;0;0;0;0;com.mpatric.mp3agic.BufferToolsTest.shouldUnsynchroniseThenSynchroniseBufferMinimalBufferCorrectly();139;1;30;28;1;19;1
com.mpatric.mp3agic.BufferTools.trimStringRight(String);4;14;3;9;4;9;1;13;3;10;5;5;5;5;4;4;2;4;com.mpatric.mp3agic.BufferToolsTest.shouldRightTrimUnicodeStringsCorrectly();0;18;2;14;6;2;0;16;2;14;2;2;2;2;0;0;0;0;com.mpatric.mp3agic.BufferToolsTest.shouldRightTrimUnicodeStringsCorrectly();29.5333333333333;1;2.86666666666667;16;1;9;0.529411764705882
com.mpatric.mp3agic.BufferTools.unsynchroniseBuffer(byte[]);8;17;4;12;2;7;1;16;5;11;5;5;7;1;1;0;2;0;com.mpatric.mp3agic.BufferToolsTest.shouldReturnOriginalBufferIfNoUnynchronisationOrSynchronisationIsRequired();1;15;9;11;6;2;0;13;9;4;2;2;2;2;0;0;0;0;com.mpatric.mp3agic.BufferToolsTest.shouldReturnOriginalBufferIfNoUnynchronisationOrSynchronisationIsRequired();52;1;6;4;0.222222222222222;4;0.266666666666667
com.mpatric.mp3agic.EncodedText.EncodedText(byte,byte[]);22;10;1;7;5;2;0;6;1;5;2;2;3;1;1;0;1;0;com.mpatric.mp3agic.EncodedTextTest.shouldStillReturnBytesWhenUnicodeDataIsEmpty();38;171;35;137;67;12;0;158;35;123;12;12;12;11;1;0;0;0;com.mpatric.mp3agic.EncodedTextTest.shouldStillReturnBytesWhenUnicodeDataIsEmpty();66;0;0;6;1;2;1
com.mpatric.mp3agic.ID3v1Genres.matchGenreDescription(String);10;10;1;5;3;4;1;8;2;6;4;4;5;4;4;4;3;4;com.mpatric.mp3agic.ID3v1GenresTest.returnsCorrectGenreIdForFirstExistentGenre();0;6;2;2;4;2;0;4;2;2;2;2;2;2;0;0;0;0;com.mpatric.mp3agic.ID3v1GenresTest.returnsCorrectGenreIdForFirstExistentGenre();307;1;148;8;0.888888888888889;4;0.666666666666667
com.mpatric.mp3agic.ID3Wrapper.clearComment();5;8;1;4;2;4;1;5;1;4;3;3;3;1;0;0;1;0;com.mpatric.mp3agic.ID3WrapperTest.clearsCommentFrameOnV2Tag();1;15;6;11;13;2;0;13;6;7;2;2;2;2;0;0;0;0;com.mpatric.mp3agic.ID3WrapperTest.clearsCommentFrameOnV2Tag();12;0;0;8;1;2;0.5
com.mpatric.mp3agic.ID3Wrapper.getAlbum();7;9;1;6;3;3;0;6;1;5;3;3;5;3;2;2;1;2;com.mpatric.mp3agic.ID3WrapperTest.getAlbumReturnsNullIfBothTagsDoNotExist();0;20;10;14;11;3;0;17;10;7;3;3;3;3;0;0;0;0;com.mpatric.mp3agic.ID3WrapperTest.getAlbumReturnsNullIfBothTagsDoNotExist();14;0;0;8;1;3;1
com.mpatric.mp3agic.ID3Wrapper.getArtist();7;9;1;6;3;3;0;6;1;5;3;3;5;3;2;2;1;2;com.mpatric.mp3agic.ID3WrapperTest.getArtistReturnsNullIfBothTagsDoNotExist();0;18;9;12;11;3;0;15;9;6;3;3;3;3;0;0;0;0;com.mpatric.mp3agic.ID3WrapperTest.getArtistReturnsNullIfBothTagsDoNotExist();14;0;0;8;1;3;1
com.mpatric.mp3agic.ID3Wrapper.getComment();7;9;1;6;3;3;0;6;1;5;3;3;5;3;2;2;1;2;com.mpatric.mp3agic.ID3WrapperTest.getCommentReturnsNullIfBothTagsDoNotExist();0;20;10;14;11;3;0;17;10;7;3;3;3;3;0;0;0;0;com.mpatric.mp3agic.ID3WrapperTest.getCommentReturnsNullIfBothTagsDoNotExist();14;0;0;8;1;3;1
com.mpatric.mp3agic.ID3Wrapper.getComposer();3;7;1;4;2;2;0;4;1;3;2;2;2;1;1;0;1;0;com.mpatric.mp3agic.ID3WrapperTest.getComposerReturnsNullIfV2TagDoesNotExist();0;12;7;8;7;2;0;10;7;3;2;2;2;2;0;0;0;0;com.mpatric.mp3agic.ID3WrapperTest.getComposerReturnsNullIfV2TagDoesNotExist();8;0;0;5;1;2;1
com.mpatric.mp3agic.MpegFrame.getLengthInBytes();9;12;3;7;1;4;1;10;3;7;3;3;3;1;2;0;1;0;com.mpatric.mp3agic.MpegFrameTest.shouldProcessValidMpegVersion2Header();14;34;6;30;30;2;0;32;6;26;2;2;2;2;0;0;0;0;com.mpatric.mp3agic.MpegFrameTest.shouldProcessValidMpegVersion2Header();14;0;0;6;0.6;1;0.25

ID;countInput;countLineCode;countLineCodeDecl;countLineCodeExe;countOutput;countPath;countPathLog;countStmt;countStmtDec;countStmtExe;cyclomatic;cyclomaticModified;cyclomaticStrict;essential;knots;maxEssentialKnots;maxNesting;minEssentialKnots;ID;countInput;countLineCode;countLineCodeDecl;countLineCodeExe;countOutput;countPath;countPathLog;countStmt;countStmtDec;countStmtExe;cyclomatic;cyclomaticModified;cyclomaticStrict;essential;knots;maxEssentialKnots;maxNesting;minEssentialKnots;Id;AvgPathLength;HasLoop;AvgCountLoop;CountReqEcCovered;EdgeCoverage;CountReqPcCovered;PrimePathCoverage
net.objecthunter.exp4j.ExpressionBuilder.build();183;16;1;11;8;6;1;12;2;10;4;4;5;1;0;0;2;0;net.objecthunter.exp4j.ExpressionBuilderTest.testExpression14();12;617;241;469;300;45;0;355;200;155;45;45;45;45;0;0;0;0;net.objecthunter.exp4j.ExpressionBuilderTest.testExpression14();844;1;219;12;0.8571428571428572;3;0.5;
net.objecthunter.exp4j.function.Function.Function(String,int);3;11;1;7;4;4;1;7;1;6;3;3;3;1;0;0;1;0;net.objecthunter.exp4j.FunctionsTest.testFunctionNameNegativeArgs();0;139;52;97;54;9;0;72;47;25;9;9;9;9;0;0;0;0;net.objecthunter.exp4j.FunctionsTest.testFunctionNameNegativeArgs();52;0;0;7;0.7777777777777777;2;0.6666666666666666;
net.objecthunter.exp4j.function.Function.isValidFunctionName(String);3;19;3;13;5;6;1;16;4;12;6;6;8;6;5;5;2;5;net.objecthunter.exp4j.FunctionsTest.testCheckFunctionNames();0;25;1;23;3;1;0;24;1;23;1;1;1;1;0;0;0;0;net.objecthunter.exp4j.FunctionsTest.testCheckFunctionNames();27.53846153846154;1;4.769230769230769;16;0.8421052631578947;16;0.7619047619047619;
net.objecthunter.exp4j.Expression.evaluate();209;43;11;33;17;30;1;37;13;24;13;13;13;1;4;0;3;0;net.objecthunter.exp4j.ExpressionTest.testClearVariables();1;112;17;98;23;6;1;71;16;55;5;5;5;3;2;0;0;0;net.objecthunter.exp4j.ExpressionTest.testClearVariables();77.33333333333334;1;8.833333333333332;24;0.5714285714285714;3;0.04;
net.objecthunter.exp4j.Expression.validate(boolean);36;48;7;35;12;160;2;34;9;25;17;14;17;3;7;4;4;3;net.objecthunter.exp4j.ExpressionValidateTest.testValidateFunctionWithTwoAndThreeArgumentsAndMultipleOperator();4;30;16;22;26;4;0;16;12;4;4;4;4;4;0;0;0;0;net.objecthunter.exp4j.ExpressionValidateTest.testValidateFunctionWithTwoAndThreeArgumentsAndMultipleOperator();130;1;17;23;0.5227272727272727;15;0.08426966292134831;
